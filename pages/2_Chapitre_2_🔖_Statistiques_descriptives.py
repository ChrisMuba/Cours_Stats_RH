


import streamlit as st

st.markdown("# Chapitre 2")
st.sidebar.markdown("# Chapitre 2")

st.title("Statistiques descriptives")

st.markdown("Comme nous l'avons pr√©c√©demment vu, **les statistiques descriptives traitent de la collecte, de l'analyse et de la pr√©sentation des donn√©es**.") 
st.markdown("Elles vont fournir aux professionnels RH des outils pour d√©crire et r√©sumer les donn√©es d'une mani√®re facile √† comprendre.")

if st.button("Cliquez pour acceder au Chap.2 - **A/ Mesures de tendance centrale**"):
    
    st.subheader("üìàChap.2-A/ Mesures de tendance centraleüìâ")
    
    st.markdown("Les **mesures de tendance centrale** sont utilis√©es pour d√©finir le centre d'une distribution ou d'un ensemble de donn√©es.") 
    st.markdown("En statistique, une **distribution** fait r√©f√©rence au mod√®le de variation dans un ensemble de donn√©es num√©riques.") 
    st.markdown("Ce mod√®le de variation d√©crit comment les donn√©es sont r√©parties sur une plage de valeurs. On peut visualiser une distribution √† l'aide d'un graphique, tel qu'un histogramme ou un box plot.")
    
    st.markdown("**Il existe trois principales mesures de tendance centrale** :")
    
    st.markdown("- **Moyenne** : il s'agit de la moyenne arithm√©tique d'un ensemble de valeurs. Elle est calcul√©e en additionnant toutes les valeurs et en divisant par le nombre de valeurs.") 
    st.markdown("La moyenne est sensible aux valeurs aberrantes et aux valeurs extr√™mes, et peut ne pas √™tre repr√©sentative des donn√©es s'il existe des valeurs extr√™mes.")


    import streamlit as st
    import plotly.express as px
    import pandas as pd
    import numpy as np

# Sample employee salary data (in thousands of dollars)
    salaires = [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000] 

# Create a DataFrame
    df = pd.DataFrame({'Salaire (en milliers ‚Ç¨)': salaires})

# Calculate the mean
    mean_salary = np.mean(df['Salaire (en milliers ‚Ç¨)'])

# Display the theoretical formula for calculating the mean
    st.subheader("Formule th√©orique de la **moyenne**")
    st.latex(r'\text{Moyenne} = \frac{\sum_{i=1}^{n}X_i}{n}')


    st.markdown("")


    st.markdown("**üèÄApplication**")
    st.markdown("**Salaires (‚Ç¨) : [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000]**")

    

# Display the steps for calculating the mean
    st.subheader("√âtapes pour calculer la moyenne")
    st.markdown(
    """
    1. **Sommez toutes les valeurs:** additionnez toutes les valeurs de salaire dans l‚Äôensemble de donn√©es.
    2. **Comptez le nombre de valeurs (n) :** d√©terminez le nombre total de salaires dans l'ensemble de donn√©es.
    3. **Appliquez la formule:** Divisez la somme par le nombre de valeurs pour obtenir la moyenne.
    """
)

# Display the calculated mean
    st.write(f"**Salaire moyen: {mean_salary:.2f} (en ‚Ç¨)**")

# Create a histogram
    fig_hist = px.histogram(df, x='Salaire (en milliers ‚Ç¨)', title='Histogramme de la distribution des salaires')

# Display the histogram
    st.plotly_chart(fig_hist)
    

    st.markdown("")


    st.markdown("**üîÆInterpretation de l'histogramme de la distribution des salaires**")


    st.markdown("L'histogramme de r√©partition des salaires repr√©sente la **fr√©quence des diff√©rentes √©chelles** de salaire au sein de l'ensemble de donn√©es.")

    st.markdown("La plupart des salaires se situent dans la fourchette de **55 000 ‚Ç¨ √† 65 000 ‚Ç¨**, cette cat√©gorie ayant la fr√©quence la plus √©lev√©e.")

    st.markdown("Il n'y a pas de salaires inf√©rieurs √† 55 000 ‚Ç¨ ou sup√©rieurs √† 75 000 dans cet ensemble de donn√©es.")

    st.markdown("La r√©partition est **l√©g√®rement asym√©trique vers la gauche**, ce qui indique qu'il y a relativement plus d'employ√©s dont le salaire est inf√©rieur au salaire m√©dian (environ 60 500 ‚Ç¨).")


    st.markdown("")


    st.markdown("")

    
    st.markdown("- **M√©diane** : la valeur m√©diane est le point milieu d'un ensemble de donn√©es num√©riques. Elle est calcul√©e en organisant les donn√©es dans l'ordre croissant, de sorte que la moiti√© des valeurs soient inf√©rieures ou √©gales √† la m√©diane et l'autre moiti√© sup√©rieures ou √©gales. Ainsi la m√©diane se trouve √™tre le point milieu.") 
    st.markdown("Comparativement √† la moyenne, la m√©diane est moins sensible aux valeurs aberrantes ou extr√™mes ; et fournit une meilleure repr√©sentation de la‚ö°**valeur typique**‚ö°de l'ensemble de donn√©es.") 



    import streamlit as st
    import pandas as pd

# Sample employee salary data (in dollars)
    salaries = [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000]


# Display the theoretical formula for calculating the median
    st.subheader("Formule th√©orique de la **mediane**")
    st.latex(r'\text{Mediane} = \frac{N+1}{2}^{√®me}\ \text{valeur dans les donn√©es class√©es par ordre croissant}')

    st.markdown("")


    st.markdown("**üèÄApplication**")
    st.markdown("**Salaires (‚Ç¨) : [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000]**")

# Display the steps for calculating the median
    st.subheader("√âtapes pour calculer la mediane")
    st.markdown(
    """
    1. **Classez les donn√©es :** Commencez par classer les donn√©es salariales par ordre croissant.
    2. **Trouver la valeur m√©diane :** si l'ensemble de donn√©es comporte un nombre **impair** de valeurs (N), la m√©diane est la valeur m√©diane. 
       Si le nombre de valeurs est **pair**, la m√©diane est la moyenne des deux valeurs m√©dianes.
    """
)


    # Calculate the median
    sorted_salaries = sorted(salaries)
    n = len(sorted_salaries)

    if n % 2 == 1:
    # Odd number of values
        median = sorted_salaries[n // 2]
    else:
    # Even number of values
        middle1 = sorted_salaries[(n - 1) // 2]
        middle2 = sorted_salaries[n // 2]
        median = (middle1 + middle2) / 2
    
    # Display the calculated median
    st.write(f"**Salaire median : {median} (en ‚Ç¨)**")
    

    # Import necessary libraries
    import streamlit as st
    import plotly.express as px

# Data: Salaries in dollars
    salaires = [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000]

# Create a box plot using Plotly Express
    fig = px.box(x=salaires, labels={'x': 'Salaires (k‚Ç¨)'}, title="Box Plot de la distribution des salaires")

# Display the plot in the Streamlit app
    st.plotly_chart(fig)


    st.markdown("")


    st.markdown("**üîÆInterpretation du box plot (boite √† moustaches) de la distribution des salaires**")


    st.markdown("Le **box plot** fournit un r√©sum√© de la r√©partition des salaires, y compris des mesures de tendance centrale et de variabilit√©.")

    st.markdown("La boite repr√©sente l'intervalle interquartile (IQR), les bords inf√©rieur (√† gauche) et sup√©rieur (√† droite) de la case marquant respectivement le premier quartile (Q1) et le troisi√®me quartile (Q3).")

    st.markdown("Intervalle interquartile (IQR) : la moiti√© moyenne des salaires (de Q1 √† Q3) se situe entre environ 58 000 ‚Ç¨ et 65 000 ‚Ç¨.")

    st.markdown("La ligne verticale √† l‚Äôint√©rieur de la boite repr√©sente le salaire m√©dian (Q2) : environ 60 500 ‚Ç¨.")

    st.markdown("Les ¬´ moustaches ¬ª s'√©tendent des bords de la bo√Æte jusqu'aux salaires minimum (55 000 ‚Ç¨) et maximum (75 000 ‚Ç¨) dans une fourchette raisonnable : **il n'y a pas de valeurs aberrantes dans l'ensemble de donn√©es**, car tous les salaires se situent dans la fourchette raisonnable des ¬´ moustaches ¬ª.")

    st.markdown("")


    st.markdown("")

    
    st.markdown("- **Mode** : c'est la valeur la plus courante dans un ensemble de donn√©es. Le mode est calcul√© en identifiant la valeur qui se produit le plus fr√©quemment.") 
    st.markdown("Il s'agit d'une mesure simple qui peut √™tre utilis√©e pour r√©sumer et d√©crire des donn√©es, en conjonction avec la moyenne et la m√©diane pour obtenir une image plus compl√®te des donn√©es.") 
    st.markdown("‚ö†Ô∏èCependant, le mode a certaines limites. Par exemple, ce n'est pas un bon indicateur de tendance centrale lorsque les donn√©es contiennent des valeurs aberrantes, car ces valeurs peuvent fausser la distribution et rendre le mode moins repr√©sentatif de la‚ö°**valeur typique**‚ö°dans les donn√©es.") 
    st.markdown("Dans de tels cas, d'autres mesures de tendance centrale, telles que la moyenne ou la m√©diane, peuvent √™tre plus appropri√©es.")


# Import necessary libraries
    import streamlit as st
    import pandas as pd
    import plotly.express as px

# Display the formula for calculating the mode
    st.subheader("Comment trouver le **mode** ?")
    st.markdown("Le mode est la valeur qui appara√Æt **le plus fr√©quemment** dans l'ensemble de donn√©es.)")

    st.markdown("**üèÄApplication**")
    
    # Sample data without outliers
    data_without_outliers = [35000, 40000, 42000, 45000, 48000, 50000, 50000, 52000, 55000, 58000, 60000]

# Create a DataFrame
    df_without_outliers = pd.DataFrame(data_without_outliers, columns=['Salaires (‚Ç¨)'])

# Display the data table
    st.markdown("Ci-dessous un √©chantillon de donn√©es de **Salaires (en ‚Ç¨)** :")
    st.dataframe(df_without_outliers)
    
    

    # Display the steps for calculating the mode
    st.subheader("√âtapes pour d√©terminer le mode")
    st.markdown(
    """
    1. **Classez les donn√©es :** Commencez par classer les donn√©es salariales par ordre croissant.
    2. **Trouver la valeur m√©diane :** si l'ensemble de donn√©es comporte un nombre **impair** de valeurs (N), la m√©diane est la valeur m√©diane. 
       Si le nombre de valeurs est **pair**, la m√©diane est la moyenne des deux valeurs m√©dianes.
    """
)






# Calculate the mode
    mode_without_outliers = df_without_outliers['Salaires (‚Ç¨)'].mode().values[0]

# Display the mode
    st.subheader(f"Mode (Without Outliers): {mode_without_outliers}")

# Explanation and calculation steps
    st.subheader("Calculation Steps (Without Outliers)")

    # Step 1: Frequency Distribution
    st.write("Step 1: Create a frequency distribution to count the occurrences of each value in the dataset.")
    frequency_table_without_outliers = df_without_outliers['Salaires (‚Ç¨)'].value_counts().reset_index()
    frequency_table_without_outliers.columns = ['Salaires (‚Ç¨)', 'Frequency']
    st.dataframe(frequency_table_without_outliers)

# Step 2: Find the Maximum Frequency
    st.write("Step 2: Identify the value(s) with the highest frequency (mode).")
    max_frequency_without_outliers = frequency_table_without_outliers['Frequency'].max()
    mode_values_without_outliers = frequency_table_without_outliers[frequency_table_without_outliers['Frequency'] == max_frequency_without_outliers]['Salaires (‚Ç¨)'].tolist()
    st.write(f"Mode Value(s): {mode_values_without_outliers}")

# Create a histogram
    fig_without_outliers = px.histogram(df_without_outliers, x='Salaires (‚Ç¨)', nbins=6, title='Salary Distribution (Without Outliers)')
    st.plotly_chart(fig_without_outliers)





    

# Sample data without outliers
    data_without_outliers = [35000, 40000, 42000, 45000, 48000, 50000, 50000, 52000, 55000, 58000, 60000]

# Create a DataFrame
    df_without_outliers = pd.DataFrame(data_without_outliers, columns=['Salary'])

# Display the data table
    st.subheader("Sample Salary Data (Without Outliers)")
    st.dataframe(df_without_outliers)

# Calculate the mode
    mode_without_outliers = df_without_outliers['Salary'].mode().values[0]

# Display the mode
    st.subheader(f"Mode (Without Outliers): {mode_without_outliers}")

# Create a histogram
    fig_without_outliers = px.histogram(df_without_outliers, x='Salary', nbins=6, title='Salary Distribution (Without Outliers)')
    st.plotly_chart(fig_without_outliers)

# Explanation
    st.write("""
    In this example, we have a sample of salary data without any outliers. The mode represents the most 
    common salary in the dataset, which is the value that occurs most frequently. In this case, 
    the mode is used to describe the central tendency of the salary distribution. The mode helps HR 
    professionals understand the most typical salary level within the organization.
""")

# Create a second Streamlit app for data with outliers
    st.header("Measures of Central Tendency - Mode (With Outliers)")

# Sample data with outliers
    data_with_outliers = [35000, 40000, 42000, 45000, 48000, 50000, 50000, 52000, 55000, 58000, 60000, 100000, 120000]

# Create a DataFrame
    df_with_outliers = pd.DataFrame(data_with_outliers, columns=['Salary'])

# Display the data table
    st.subheader("Sample Salary Data (With Outliers)")
    st.dataframe(df_with_outliers)

# Calculate the mode
    mode_with_outliers = df_with_outliers['Salary'].mode().values[0]

# Display the mode
    st.subheader(f"Mode (With Outliers): {mode_with_outliers}")

# Create a histogram
    fig_with_outliers = px.histogram(df_with_outliers, x='Salary', nbins=6, title='Salary Distribution (With Outliers)')
    st.plotly_chart(fig_with_outliers)

# Explanation
    st.write("""
    In this example, we have a sample of salary data that includes outliers. Outliers are extreme values 
    that can skew the distribution. When outliers are present, the mode may not accurately represent 
    the central tendency because it's heavily influenced by the outliers. In such cases, other measures 
    like the mean or median may provide a better understanding of the typical salary level.
""")



if st.button("Continuer vers la suite du Chap.2 - **B/ Mesures de la variabilit√©**"):
    
    st.subheader("üìàChap.2-B/ Mesures de la variabilit√©üìâ")
    
    st.markdown("Les mesures de variabilit√© sont utilis√©es pour d√©crire la dispersion (propagation) d'une distribution ou d'un ensemble de donn√©es.") 
    st.markdown("**Il existe plusieurs mesures principales de la variabilit√©** :")
    
    st.markdown("- **Plage** : c'est la diff√©rence entre les valeurs maximales et minimales dans un ensemble de donn√©es.") 
    st.markdown("Elle fournit une estimation approximative de la variabilit√©, mais est sensible aux valeurs aberrantes.")
                
    st.markdown("- **Variance** : il s'agit de la moyenne des diff√©rences au carr√© entre chaque valeur et la moyenne.") 
    st.markdown("Elle fournit une mesure plus pr√©cise de la variabilit√©, mais est affect√© par des valeurs extr√™mes.")    
                
    st.markdown("- **√âcart type** : C'est la racine carr√©e de la variance. Il s'agit de la mesure de variabilit√© la plus couramment utilis√©e et fournit une mesure de la dispersion dans les m√™mes unit√©s que l'ensemble de donn√©es d'origine.")            

if st.button("Continuer vers la suite du Chap.2 - **C/ Techniques graphiques**"):
    
    st.subheader("üìàChap.2-C/ Techniques graphiquesüìâ")
    
    st.markdown("Des techniques graphiques peuvent √™tre utilis√©es pour am√©liorer encore la compr√©hension d'un ensemble de donn√©es.") 
    st.markdown("Les repr√©sentations visuelles peuvent aider les professionnels RH √† identifier facilement des mod√®les ou des tendances dans les donn√©es et √† communiquer des informations aux parties prenantes.")
    
    st.markdown("**Certains types courants de graphiques incluent** :") 
    
    st.markdown("- **Histogramme** : c'est un graphique qui montre la distribution de fr√©quence des donn√©es num√©riques. Les donn√©es sont divis√©es en intervalles ou bacs, et la hauteur de la barre repr√©sente la fr√©quence de chaque intervalle.")
    
    st.markdown("- **Bo√Æte √† moustache** : ce graphique montre la distribution de donn√©es num√©riques √† l'aide de quartiles. Il affiche le minimum, le maximum, la m√©diane et les premier et troisi√®me quartiles des donn√©es.")
    
    st.markdown("- **Nuages de points** : un graphique qui montre la relation entre deux variables num√©riques. Chaque point repr√©sente une paire de valeurs et le mod√®le des points peut indiquer la force et la direction de la relation.")
    



        
        
        
        
        
        
